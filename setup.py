from __future__ import print_function
import sys

if sys.version_info[0] < 3:
    raise RuntimeError("python 3 only")
import os
from setuptools import setup, Extension

# Utility function to read the README file.
# Used for the long_description.  It's nice, because now 1) we have a top level
# README file and 2) it's easier to type in the README file than to put a raw
# string in below ...
def read(fname):
    return open(os.path.join(os.path.dirname(__file__), fname)).read()

try:
    import PyQt4
    import PyQt4.QtOpenGL
except ImportError:
    raise ImportError('Please install PyQt4 (python3-pyqt4) and PyGt4.QtOpenGL (python3-pyqt4.qtopengl).')

if 'install' in sys.argv and '--single-version-externally-managed' not in sys.argv:
    print('Warning: Menu entry will probably not be created (use --single-version-externally-managed or pip)')
    
    

setup(
    name = "jigsoid",
    version = "0.0.1",
    author = "Johannes Loehnert",
    author_email = "loehnert.kde@gmx.de",
    description = ("Jigsoid jigsaw puzzle game"),
    license = "BSD",
    keywords = "game",
    url = "https://github.com/loehnertj/bigjig",
    packages=['neatocom', 'puzzleboard', 'qtpuzzle', 'slicer'],
    # XXX: This does not work, since render_outline.c is not a python extension but a "standard" C library.
    # XXX Building succeeds but you cannot import it. ctypes.LoadLibrary fails since the autogenerated
    # XXX file name contains python version and architecture.
    ext_modules=[
        Extension('qtpuzzle._render_outline', ['qtpuzzle/render_outline.c']),
    ],
    entry_points = {
        'gui_scripts': [
            'jigsoid = qtpuzzle.__main__:main'
        ],
    },
    data_files = [
        ('share/applications', ['jigsoid.desktop']),
        ('share/icons', ['jigsoid.png']),
    ],
    long_description=read('README.md'),
    classifiers=[
        "Development Status :: 4 - Beta",
        "Topic :: Games/Entertainment :: Puzzle Games",
        "License :: OSI Approved :: BSD License",
    ],
)

